<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sycliff.andromeda</groupId>
    <version>1.0.0</version>
    <artifactId>jsonquery-jpa</artifactId>
    <packaging>bundle</packaging>

    <name>JSONQuery JPA OSGI</name>
    <description>JSONQuery JPA translates JSON queries to JPA queries compatible with  OSGi, supports Datatable and JqGrid. Forked from https://github.com/markserrano/jsonquery-jpa but without the need for Sping Data Api</description>
    <url>https://github.com/markserrano/jsonquery-jpa</url>
    <inceptionYear>2011-2012</inceptionYear>
    <organization>
        <name>Sycliff</name>
        <url>www.sycliff.com</url>
    </organization>

    <developers>
        <developer>
            <id>markserrano</id>
            <name>Mark Anthony Serrano</name>
            <email>mark-serrano at outlook.com</email>
            <organization>Independent</organization>
            <organizationUrl>Not Applicable</organizationUrl>
            <roles>
                <role>Project lead</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
         <developer>
            <id>kiamesdavies</id>
            <name>James Akinniranye</name>
            <email>jamesniranye at gmail.com</email>
            <organization>Sycliff</organization>
            <organizationUrl>www.sycliff.com</organizationUrl>
            <roles>
                <role>System Engineer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <properties>
        <hsqldb.version>2.0.0</hsqldb.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <querydsl.version>3.7.2</querydsl.version>
        <spring.data.jpa.version>1.0.2.RELEASE</spring.data.jpa.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


        <bval.version>1.1.0</bval.version>

       <commons-lang3.version>3.3.2</commons-lang3.version>
       <commons-collections.version>3.2.1</commons-collections.version>
       <commons-beanutils.version>1.8.3</commons-beanutils.version>
       <commons-weaver.version>1.1</commons-weaver.version>

       <geronimo-validation-1.1-spec.version>1.0-alpha-1</geronimo-validation-1.1-spec.version>
       <geronimo-validation-1.0-spec.version>1.1</geronimo-validation-1.0-spec.version>
       <geronimo-spec-locator.version>1.1</geronimo-spec-locator.version>
       <geronimo-atinject-spec.version>1.0</geronimo-atinject-spec.version>
       <geronimo-el-2.2-spec.version>1.0.4</geronimo-el-2.2-spec.version>

       <pax-exam.version>4.5.0</pax-exam.version>

       <servicemix-depends-plugin.version>1.2</servicemix-depends-plugin.version>
    </properties>

    <dependencies>

        <!--         Spring Data JPA
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring.data.jpa.version}</version>
        </dependency>-->



        <!-- QueryDSL -->
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-core</artifactId>
            <version>${querydsl.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${querydsl.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
<!--        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${querydsl.version}</version>
            <scope>provided</scope>
        </dependency>-->



        <!-- Apache Commons -->
        <!-- The codec package contains simple encoder and decoders for various
        formats such as Base64 and Hexadecimal. In addition to these widely used
        encoders and decoders, the codec package also maintains a collection of phonetic
        encoding utilities. -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- Types that extend and augment the Java Collections Framework. -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>

            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- BeanUtils provides an easy-to-use but flexible wrapper around reflection
        and introspection. -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.8.3</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

<!--         A seamless aspect-oriented extension to the Java programming language
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.6.10</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.10</version>
        </dependency>-->

        <!-- Cglib is a powerful, high performance and quality Code Generation
        Library, It is used to extend JAVA classes and implements interfaces at runtime. -->
<!--        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>-->
        <dependency>
           <groupId>com.fasterxml.jackson.core</groupId>
           <artifactId>jackson-databind</artifactId>
           <version>2.6.3</version>
       </dependency>
       <dependency>
           <groupId>org.osgi</groupId>
           <artifactId>org.osgi.core</artifactId>
           <version>6.0.0</version>
       </dependency>

       <dependency>
             <groupId>org.osgi</groupId>
           <artifactId>osgi.cmpn</artifactId>
           <version>6.0.0</version>
       </dependency>

       <dependency>
           <groupId>javax.transaction</groupId>
           <artifactId>javax.transaction-api</artifactId>
           <version>1.2</version>
       </dependency>


       <dependency>
           <groupId>javax.inject</groupId>
           <artifactId>javax.inject</artifactId>
           <version>1</version>
       </dependency>
       <dependency>
           <groupId>javax.enterprise</groupId>
           <artifactId>cdi-api</artifactId>
           <scope>provided</scope>
           <version>1.2</version>
       </dependency>
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-validator</artifactId>
           <version>5.2.4.Final</version>
       </dependency>
       <dependency>
           <groupId>javax.el</groupId>
           <artifactId>javax.el-api</artifactId>
           <version>2.2.4</version>
       </dependency>
       <dependency>
           <groupId>org.glassfish.web</groupId>
           <artifactId>javax.el</artifactId>
           <version>2.2.4</version>
       </dependency>
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-validator-annotation-processor</artifactId>
           <version>5.2.4.Final</version>
       </dependency>
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-validator-cdi</artifactId>
           <version>5.2.4.Final</version>
       </dependency>

       <dependency>
           <groupId>junit</groupId>
           <artifactId>junit</artifactId>
           <version>4.11</version>
           <scope>test</scope>
           <type>jar</type>
       </dependency>


       <dependency>
           <groupId>org.hamcrest</groupId>
           <artifactId>hamcrest-library</artifactId>
           <version>1.3</version>
           <scope>test</scope>
           <type>jar</type>
       </dependency>
       <dependency>
           <groupId>org.ops4j.pax.logging</groupId>
           <artifactId>pax-logging-log4j2</artifactId>
           <version>1.8.5</version>
       </dependency>
       <dependency>
           <groupId>org.ops4j.pax.logging</groupId>
           <artifactId>pax-logging-api</artifactId>
           <version>1.8.5</version>
       </dependency>

       <dependency>
           <groupId>org.apache.felix</groupId>
           <artifactId>org.apache.felix.dependencymanager.annotation</artifactId>
           <version>4.1.0</version>
       </dependency>

       <dependency>
           <groupId>org.apache.felix</groupId>
           <artifactId>org.apache.felix.gogo.runtime</artifactId>
           <version>0.16.2</version>
       </dependency>


        <!-- Joda Time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>1.6.2</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time-hibernate</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- Logger -->


    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.karaf.tooling</groupId>
                    <artifactId>karaf-maven-plugin</artifactId>
                    <version>4.0.3</version>
                    <extensions>true</extensions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.5.4</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <_include>osgi.bnd</_include>
                        <Import-Package>org.apache.felix.service.command;status=provisional,org.slf4j, *, javax.transaction;version="[1.2.0,2)"</Import-Package>

                        <_plugin>org.apache.felix.dm.annotation.plugin.bnd.AnnotationPlugin;log=debug</_plugin>
                    </instructions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>org.apache.felix.dependencymanager.annotation</artifactId>
                        <version>4.1.0</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <inherited>true</inherited>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
